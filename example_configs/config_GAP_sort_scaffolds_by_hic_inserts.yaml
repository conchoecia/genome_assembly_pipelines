# dschultz@mbari.org
#
# This config file is for the script `GAP_sort_scaffolds_by_hic`
#  https://github.com/conchoecia/genome_assembly_pipelines
# To use this config file, copy it to the directory you
#  want to run the analysis in, then rename it to
#  config.yaml. Edit the config.yaml file and then run
#  snakemake --snakfile /path/to/genome_assembly_pipelines/scripts/GAP_hic_map

# This program works by sorting all the little scaffolds in a genome assembly
#  based on their best location relative to the chromosome-scale scaffolds.
#  You must specify which are the chromosome-scale scaffolds. They will be
#  printed out in the fasta file in the order that you specify. The other
#  scaffolds will be printed out next in the Hi-C sorted order.

# The path to your assembly for which you want a Hi-C map goes here.
assemblies:
  code_name_for_this_assembly: "/path/to/assembly.fasta"

chromosomes:
  - Nameofchrom1
  - CHR2
  - chr3
  - Chr4

# strength fraction 0-1
#  - 0.25 means only insert the scaffolds with the strongest 25% of Hi-C connections
#  - This works by selections the strongest 25%, then filters more by the minimum
#    size specified below with min_insert_size.
strength_fraction: 0.5

# only insert scaffolds of this length or longer
min_insert_size: 10000

# how big the gaps will be in the new assembly
new_gap_length: 100

# The are the paths to the Hi-C files. You can
#  have multiple fasta files per library.
#  It doesn't matter how you do it now, because
#  all of the libraries are concatenated together.
libs:
  HiC-lib1:
    read1:
    - /path/to/HiC-lib1_f.fastq.gz
    read2:
    - /path/to/HiC-lib1_r.fastq.gz
  Another-HiC-lib:
    read1:
    - /path/to/Another-HiC-lib_f.fastq.gz
    read2:
    - /path/to/Another-HiC-lib_r.fastq.gz
