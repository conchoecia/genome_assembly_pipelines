# Put all the assemblies to run through the Purge Haplotigs pipeline here
assemblies:
   assembly_name: "/path/to/your/assembly/here.fasta"

# change this depending on the type of read you have. map-hifi, map-pb, or map-ont
#  see this website https://github.com/lh3/minimap2
minimap2arg: ["map-hifi"]

# These are the identity cutoffs used in determining whether something is repetitive
# or not. 95 means 95% identity, 80 means 80% identity, et cetera.
cutoffs: [95, 90, 80, 70]

# If you want to be thorough about QCing the final results we must map the long reads
#  back to the assembly to see how many reads still map compared to the original
#  This is just a binary True or False.
QC_results: True

# Just the path to the fastq file of the long reads
#  supports one pair of paired WGS files.
LR:
  - "/path/to/longreads/here.fastq.gz"
  - "/second/longreads/file.fastq.gz"
  - "/another/longreads/file.fastq.gz"

# To set these parameters you need to generate the histogram from the bam file.
#  [Look at the instructions here for how to pick low, med, and high](https://bitbucket.org/mroachawri/purge_haplotigs/src/master/)
#
#  There is an example photo here: https://bitbucket-assetroot.s3.amazonaws.com/repository/Ej8Mz7/84978409-phased_coverage_histogram.png?AWSAccessKeyId=AKIA6KOSE3BNJRRFUUX6&Expires=1590201948&Signature=PihHmYMpBqCIi6Vc9axC7ag914A%3D
#
#  And another example photo here: https://bitbucket-assetroot.s3.amazonaws.com/repository/Ej8Mz7/1039246939-coverage_histogram.png?AWSAccessKeyId=AKIA6KOSE3BNJRRFUUX6&Expires=1590202035&Signature=1WiFVJibktV1gwm7f14GSIorA4Q%3D
#
#  Keep these parameters at -1 until you actually know what they are from the plot.
#   Snakemake will crash once and give you a chance to look at the png output file.
#   Picks the parameters from the png histogram and edit this file. Then run
#   snakemake again. The pipeline should run to completeion now.
low: -1
medium: -1
high: -1
