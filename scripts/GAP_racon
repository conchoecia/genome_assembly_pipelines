"""
This snakefile performs racon polishing on a genome.
"""
from Bio import SeqIO
minchromsize = 1000000
configfile: "config.yaml"

config["tool"] = "GAP_racon"

rule all:
    input:
        expand(config["tool"] + "/input/bams/{nom}_to_ref.all.sam",
               nom = config["assemblies"]),
        expand(config["tool"] + "/input/reads/{nom}.all.fastq.gz",
               nom = config["assemblies"]),

# make softlinks of the input files
# files end up here:
#   assem = config["tool"] + "/input/assembly/{nom}_input.fasta",
filepath = os.path.dirname(os.path.realpath(workflow.snakefile))
softlinks_rule_path=os.path.join(filepath, "snakemake_includes/assembly_softlinks")
include: softlinks_rule_path

rule cat_reads:
    input:
        reads  = [config["longreads"][x] for x in config["longreads"]]
    output:
        reads  = config["tool"] + "/input/reads/{nom}.all.fastq.gz"
    threads: 1
    shell:
        """
        cat {input.reads} > {output.reads}
        """

rule map_longreads_to_ref:
    input:
        assem = config["tool"] + "/input/assembly/{nom}_input.fasta",
        reads  = config["tool"] + "/input/reads/{nom}.all.fastq.gz"
    output:
        sam = config["tool"] + "/input/bams/{nom}_to_ref.all.sam"
    params:
        sort_threads = max(1, int(workflow.cores/5))
    threads:
        workflow.cores
    shell:
        """
        mkdir ./tmp
        minimap2 -ax asm20 --split-prefix ./tmp/temp_name -t {threads} \
            {input.assem} {input.reads} | \
            samtools view -hb -F 2308 -@ {params.sort_threads} - | \
            samtools sort -@ {params.sort_threads} | \
            samtools view -h - > {output.sam}
        rm -rf ./tmp
        """
