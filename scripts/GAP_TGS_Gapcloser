"""
This script runs LR Gapcloser
"""
configfile: "config.yaml"
config["tool"] = "GAP_TGS_Gapcloser"

rule all:
    input:
        expand(config["tool"] + "/output/assembly/{nom}/{nom}.scaff_seqs",
               nom = config["assemblies"])

#this include makes the assembly softlinks
# outpath is = config["tool"] + "/input/assembly/{nom}_input.fasta"
filepath = os.path.dirname(os.path.realpath(workflow.snakefile))
softlinks_rule_path=os.path.join(filepath, "snakemake_includes/assembly_softlinks")
include: softlinks_rule_path

rule run_TGS_Gapcloser:
    input:
        long_reads = config["long_reads"],
        assem = config["tool"] + "/input/assembly/{nom}_input.fasta"
    output:
        assem = config["tool"] + "/output/assembly/{nom}/{nom}.scaff_seqs"
    params:
        toolname = config["tool"],
        outprefix = lambda wildcards: wildcards.nom
    threads: workflow.cores
    shell:
        """
        TGS-GapCloser.sh  \
          --scaff  {input.assem} \
          --reads  {input.long_reads} \
          --ne \
          --thread {threads} \
          --output {params.toolname}/output/assembly/{params.outprefix}/{params.outprefix} \
          --tgstype pb
        """
